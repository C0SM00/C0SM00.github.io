{"title":"A3-高精度","uid":"6940eb2ba483d3d0018fcb9e180da589","slug":"A3-高精度","date":"2022-10-01T09:46:35.000Z","updated":"2022-10-05T15:49:31.260Z","comments":true,"path":"api/articles/A3-高精度.json","keywords":"","cover":"https://blog-img-mif-1314191311.cos.ap-nanjing.myqcloud.com/images/202210021600973.jpg","content":"<h3 id=\"高精度\"><a href=\"#高精度\" class=\"headerlink\" title=\"高精度\"></a>高精度</h3><div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p>c++ 中 unsigned long long 的数量级是 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.05ex\" height=\"2.005ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -864 1790.1 886\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(1033,393.1) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\" transform=\"translate(500,0)\"></path></g></g></g></g></g></svg></mjx-container>，因此超过该数量级的数值处理就要涉及高精度运算。</p>\n\n</div>\n<h4 id=\"大数存储\"><a href=\"#大数存储\" class=\"headerlink\" title=\"大数存储\"></a>大数存储</h4><p>为方便处理进位，将大数在数组中逆序存储。</p>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">int main() {\n    string s1, s2;\n    vector&lt;int&gt; num1, num2;\n    // 方便起见，首先利用字符串读取输入数据，再转化为数组\n    cin &gt;&gt; s1 &gt;&gt; s2;\n    // Warning: 数字字符转换为数值时需要减'0'\n    for(int i = s1.size() - 1; i &gt;= 0; --i) num1.push_back(s1[i] - '0');\n    for(int i = s2.size() - 1; i &gt;= 0; --i) num2.push_back(s2[i] - '0');\n}</code></pre>\n\n<h4 id=\"高精度加法\"><a href=\"#高精度加法\" class=\"headerlink\" title=\"高精度加法\"></a>高精度加法</h4><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">vector&lt;int&gt; add(vector&lt;int&gt; &amp;num1, vector&lt;int&gt; &amp;num2) {\n    vector&lt;int&gt; res;\n    // Warning: 注意初始化进位\n    int t = 0;\n    for(int i = 0; i &lt; num1.size() || i &lt; num2.size(); ++i) {\n        if(i &lt; num1.size()) t += num1[i];\n        if(i &lt; num2.size()) t += num2[i];\n        res.push_back(t % 10);\n        t /= 10;\n    }\n    // 判断最高位是否存在进位\n    if(t) res.push_back(t); // ==&gt; res.push_back(1)\n    return res;\n}</code></pre>\n\n<h4 id=\"高精度减法\"><a href=\"#高精度减法\" class=\"headerlink\" title=\"高精度减法\"></a>高精度减法</h4><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">// 判断 num1 是否 &gt;= num2\nbool cmp(vector&lt;int&gt; &amp;num1, vector&lt;int&gt; &amp;num2) {\n\tif(num1.size() != num2.size()) return num1.size() &gt; num2.size();\n    for(int i = num1.size() - 1; i &gt;= 0; --i) \n        if(num1[i] != num2[i])\n            return num1[i] &gt; num2[i];\n    return true;\n}\n// 使用 sub 函数的条件是 num1 &gt;= num2\nvector&lt;int&gt; sub(vector&lt;int&gt; &amp;num1, vector&lt;int&gt; &amp;num2) {\n    vector&lt;int&gt; res;\n    int t = 0;\n    for(int i = 0; i &lt; num1.size(); ++i) {\n        t = num1[i] - t;\n        if(i &lt; num2.size()) t -= num2[i];\n        // (t + 10) % 10 综合了 (t &gt;= 0) -&gt; (t = t) 和 (t &lt; 0) -&gt; (t = t + 10) 两种情况\n        res.push_back((t + 10) % 10);\n        // 处理借位\n        t = t &lt; 0? 1 : 0;\n    }\n    // 删除前导0，但注意结果为0时需要保留最后一个0\n    while(res.size() &gt; 1 &amp;&amp; res.back() == 0) res.pop_back();\n\treturn res;\n}\nint main() {\n    /* 大数存储部分略 */\n    if(!cmp(num1, num2)) {\n        res = sub(num2, num1);\n        printf(\"-\");\n    } else {\n        res = sub(num1, num2);\n    }\n    for(int i = res.size() - 1; i &gt;= 0; --i) printf(\"%d\", res[i]);\n}</code></pre>\n\n<h4 id=\"高精度乘低精度\"><a href=\"#高精度乘低精度\" class=\"headerlink\" title=\"高精度乘低精度\"></a>高精度乘低精度</h4><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">vector&lt;int&gt; mul(vector&lt;int&gt; &amp;num1, int num2) {\n    vector&lt;int&gt; res;\n\tint t = 0;\n    // 循环条件为 num1 的数位未完全遍历 或 t中存在进位\n    for(int i = 0; i &lt; num1.size() || t; ++i) {\n        if(i &lt; num1.size()) t += num1[i] * num2;\n        res.push_back(t % 10);\n        t /= 10;\n    }\n    return res;\n}</code></pre>\n\n<h4 id=\"高精度除低精度\"><a href=\"#高精度除低精度\" class=\"headerlink\" title=\"高精度除低精度\"></a>高精度除低精度</h4><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">vector&lt;int&gt; div(vector&lt;int&gt; &amp;num1, int num2, int &amp;r) {\n    vector&lt;int&gt; res;\n    int r = 0;\n    for(int i = num1.size() - 1; i &gt;= 0; --i) {\n\t\tr = r * 10 + num1[i]; // 关键\n        res.push_back(r / num2);\n        r %= num2;\n    }\n    reverse(res.begin(), res.end());\n    while(res.size() &gt; 1 &amp;&amp; res.back() == 0) res.pop_back();\n    return res;\n}</code></pre>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","feature":true,"text":"高精度 TIP c++ 中 unsigned long long 的数量级是 ，因此超过该数量级的数值处理就要涉及高精度运算。 大数存储为方便处理进位，将大数在数组中逆序存储。 int main() { string s1, s2; vector&lt;int&gt; num1,...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":4,"path":"api/categories/算法.json"}],"tags":[{"name":"AcWing算法基础课","slug":"AcWing算法基础课","count":4,"path":"api/tags/AcWing算法基础课.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%AB%98%E7%B2%BE%E5%BA%A6\"><span class=\"toc-text\">高精度</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%A7%E6%95%B0%E5%AD%98%E5%82%A8\"><span class=\"toc-text\">大数存储</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%AB%98%E7%B2%BE%E5%BA%A6%E5%8A%A0%E6%B3%95\"><span class=\"toc-text\">高精度加法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%AB%98%E7%B2%BE%E5%BA%A6%E5%87%8F%E6%B3%95\"><span class=\"toc-text\">高精度减法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%AB%98%E7%B2%BE%E5%BA%A6%E4%B9%98%E4%BD%8E%E7%B2%BE%E5%BA%A6\"><span class=\"toc-text\">高精度乘低精度</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%AB%98%E7%B2%BE%E5%BA%A6%E9%99%A4%E4%BD%8E%E7%B2%BE%E5%BA%A6\"><span class=\"toc-text\">高精度除低精度</span></a></li></ol></li></ol>","author":{"name":"MiF","slug":"blog-author","avatar":"https://blog-img-mif-1314191311.cos.ap-nanjing.myqcloud.com/images/202210021426303.png","link":"/","description":"CS Learner","socials":{"github":"https://github.com/C0SM00","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/xian-xian-19-81","csdn":"https://blog.csdn.net/ReSeT_H","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"A4-前缀和差分","uid":"53c09180021c67258f4511b4ed283d51","slug":"A4-前缀和差分","date":"2022-10-05T05:52:23.000Z","updated":"2022-10-05T15:47:39.105Z","comments":true,"path":"api/articles/A4-前缀和差分.json","keywords":"","cover":"https://blog-img-mif-1314191311.cos.ap-nanjing.myqcloud.com/images/202210022301239.jpg","text":"前缀和一维前缀和// a的下标从1开始 a[1...n], 初始化 s[0] = 0 int s[N] = {0}; for(int i = 1; i &lt;= n; ++i) s[i] = s[i - 1] + a[i]; // 一维前缀和的主要作用就是求数组 [l, r] ...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":4,"path":"api/categories/算法.json"}],"tags":[{"name":"AcWing算法基础课","slug":"AcWing算法基础课","count":4,"path":"api/tags/AcWing算法基础课.json"}],"author":{"name":"MiF","slug":"blog-author","avatar":"https://blog-img-mif-1314191311.cos.ap-nanjing.myqcloud.com/images/202210021426303.png","link":"/","description":"CS Learner","socials":{"github":"https://github.com/C0SM00","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/xian-xian-19-81","csdn":"https://blog.csdn.net/ReSeT_H","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"A2-二分","uid":"7092e7a06827631ebc7687e38da9f572","slug":"A2-二分","date":"2022-10-01T09:46:09.000Z","updated":"2022-10-04T14:21:00.310Z","comments":true,"path":"api/articles/A2-二分.json","keywords":"","cover":"https://blog-img-mif-1314191311.cos.ap-nanjing.myqcloud.com/images/202210021600098.jpg","text":"整数二分 二分问题的本质 基于某个预设条件，可将区间划分为两个连续的状态区间(满足/不满足)，问题的答案就在区间的边界上。 两种二分模板// 模板1：区间[l, r]被划分为[l, mid]和[mid + 1, r] int bin_search_1(int l, int r) ...","link":"","photos":[],"count_time":{"symbolsCount":812,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":4,"path":"api/categories/算法.json"}],"tags":[{"name":"AcWing算法基础课","slug":"AcWing算法基础课","count":4,"path":"api/tags/AcWing算法基础课.json"}],"author":{"name":"MiF","slug":"blog-author","avatar":"https://blog-img-mif-1314191311.cos.ap-nanjing.myqcloud.com/images/202210021426303.png","link":"/","description":"CS Learner","socials":{"github":"https://github.com/C0SM00","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/xian-xian-19-81","csdn":"https://blog.csdn.net/ReSeT_H","juejin":"","customs":{}}},"feature":true}}