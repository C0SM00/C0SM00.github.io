[{"title":"Python_tricks","uid":"42f387978a941c90eb0f7971a3f9fdef","slug":"Python_tricks","date":"2022-10-06T04:19:43.000Z","updated":"2022-10-29T08:46:56.923Z","comments":true,"path":"api/articles/Python_tricks.json","cover":"https://blog-img-mif-1314191311.cos.ap-nanjing.myqcloud.com/images/202210291552171.jpg","text":"Swaping valuesa, b = 10, 5 a, b = b, a ####Create a single string from all the elements in list a = [\"Python\", \"is\", \"awesome\"] print(\" \".jo...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"语言特性","slug":"语言特性","count":1,"path":"api/categories/语言特性.json"}],"tags":[{"name":"Python","slug":"Python","count":1,"path":"api/tags/Python.json"}],"author":{"name":"MiF","slug":"blog-author","avatar":"https://blog-img-mif-1314191311.cos.ap-nanjing.myqcloud.com/images/202210021426303.png","link":"/","description":"CS Learner","socials":{"github":"https://github.com/C0SM00","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/xian-xian-19-81","csdn":"https://blog.csdn.net/ReSeT_H","juejin":"","customs":{}}},"feature":true},{"title":"A5-数据结构","uid":"40f7427d94a97a10aada378041f90424","slug":"A5-数据结构","date":"2022-10-06T04:19:24.384Z","updated":"2022-10-29T08:47:49.915Z","comments":true,"path":"api/articles/A5-数据结构.json","cover":"https://blog-img-mif-1314191311.cos.ap-nanjing.myqcloud.com/images/202210022323780.png","text":" 为什么选择利用数组模拟数据结构 -链表需要频繁使用new/malloc动态申请结点空间，会占用大量的时间和空间。 -利用数组模拟数据结构相当于在内存使用前先申请分配一定大小的空间作为备用，并利用数组下标代替内存地址实现结点的链式储存。 静态链表单链表#include&lt;io...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"数据结构","slug":"数据结构","count":1,"path":"api/categories/数据结构.json"}],"tags":[{"name":"AcWing算法基础课","slug":"AcWing算法基础课","count":5,"path":"api/tags/AcWing算法基础课.json"}],"author":{"name":"MiF","slug":"blog-author","avatar":"https://blog-img-mif-1314191311.cos.ap-nanjing.myqcloud.com/images/202210021426303.png","link":"/","description":"CS Learner","socials":{"github":"https://github.com/C0SM00","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/xian-xian-19-81","csdn":"https://blog.csdn.net/ReSeT_H","juejin":"","customs":{}}},"feature":true},{"title":"A4-前缀和&差分","uid":"1021d88cce27c5945c95fc3401510b8b","slug":"A4-前缀和&差分","date":"2022-10-05T05:52:23.000Z","updated":"2022-10-06T04:26:58.233Z","comments":true,"path":"api/articles/A4-前缀和&差分.json","cover":"https://blog-img-mif-1314191311.cos.ap-nanjing.myqcloud.com/images/202210022301239.jpg","text":"前缀和一维前缀和// 为处理边界, a 的下标从 1 开始： a[1...n], 初始化 s[0] = 0 // 1. 额外开一个前缀和数组 s for(int i = 1; i &lt;= n; ++i) s[i] = s[i - 1] + a[i]; // 2. 在原数组基础...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":4,"path":"api/categories/算法.json"}],"tags":[{"name":"AcWing算法基础课","slug":"AcWing算法基础课","count":5,"path":"api/tags/AcWing算法基础课.json"}],"author":{"name":"MiF","slug":"blog-author","avatar":"https://blog-img-mif-1314191311.cos.ap-nanjing.myqcloud.com/images/202210021426303.png","link":"/","description":"CS Learner","socials":{"github":"https://github.com/C0SM00","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/xian-xian-19-81","csdn":"https://blog.csdn.net/ReSeT_H","juejin":"","customs":{}}},"feature":true}]